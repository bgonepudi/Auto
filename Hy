# Define the path to your JSON file
$jsonFilePath = "C:\path\to\your\file.json"

# Read the JSON content from the file
$jsonContent = Get-Content -Path $jsonFilePath -Raw | ConvertFrom-Json

# Function to convert flat structures to nested structures dynamically
function Convert-FlatToNested($jsonContent) {
    # Gather all keys that follow the 'prefix.suffix' pattern
    $keysToConvert = $jsonContent.PSObject.Properties.Name | Where-Object { $_ -match '\.' }
    
    # Group keys by their prefix
    $groupedKeys = $keysToConvert | Group-Object { $_.Split('.')[0] }

    foreach ($group in $groupedKeys) {
        $prefix = $group.Name
        $nestedObject = @{}

        # Build the nested object
        foreach ($key in $group.Group) {
            $suffix = $key.Split('.')[1]
            $nestedObject[$suffix] = $jsonContent[$key]

            # Remove the original flat key
            $jsonContent.PSObject.Properties.Remove($key)
        }

        # Assign the nested object to the original prefix
        $jsonContent[$prefix] = $nestedObject
    }

    # Recursively process nested objects
    foreach ($key in $jsonContent.PSObject.Properties.Name) {
        if ($jsonContent.$key -is [System.Management.Automation.PSCustomObject]) {
            Convert-FlatToNested -jsonContent $jsonContent.$key
        }
    }
}

# Perform the conversion
Convert-FlatToNested -jsonContent $jsonContent

# Convert the modified content back to JSON and write to a file
$jsonContent | ConvertTo-Json -Depth 10 | Set-Content -Path $jsonFilePath
