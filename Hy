# Define the path to the input and output JSON files
$inputFilePath = "C:\path\to\your\data.json"
$outputFilePath = "C:\path\to\your\nested_data.json"

# Function to convert a flat structure into a nested structure
function Convert-ToNestedStructure {
    param (
        [Parameter(Mandatory=$true)]
        [hashtable]$FlatData
    )

    $nestedData = @{}

    foreach ($key in $FlatData.Keys) {
        $value = $FlatData[$key]
        $keys = $key -split '\.'

        $ref = $nestedData

        foreach ($i in 0..($keys.Length - 2)) {
            $k = $keys[$i]

            if ($k -match '(.+?)\[(\d+)\]') {
                $arrayName = $matches[1]
                $index = [int]$matches[2]

                if (-not $ref.ContainsKey($arrayName)) {
                    $ref[$arrayName] = @()
                }

                if ($ref[$arrayName].Count -le $index) {
                    $ref[$arrayName] += @{}
                }

                $ref = $ref[$arrayName][$index]
            } else {
                if (-not $ref.ContainsKey($k)) {
                    $ref[$k] = @{}
                }

                $ref = $ref[$k]
            }
        }

        $ref[$keys[-1]] = $value
    }

    return $nestedData
}

# Read the JSON file
$flatData = Get-Content -Raw -Path $inputFilePath | ConvertFrom-Json

# Convert the JSON object to a hashtable
$flatData = @{} + $flatData

# Convert the flat JSON structure to a nested structure
$nestedData = Convert-ToNestedStructure -FlatData $flatData

# Convert the nested structure back to JSON and save it to a new file
$nestedData | ConvertTo-Json -Depth 10 | Set-Content -Path $outputFilePath
